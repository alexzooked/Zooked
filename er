= ..aadddd

(from gem actionpack-3.2.12)
=== IImmpplleemmeennttaattiioonn  ffrroomm  AAccttiioonnCCoonnttrroolllleerr::::RReennddeerreerrss
------------------------------------------------------------------------------
  add(key, &block)

------------------------------------------------------------------------------

Adds a new renderer to call within controller actions. A renderer is invoked
by passing its name as an option to AbstractController::Rendering#render. To
create a renderer pass it a name and a block. The block takes two arguments,
the first is the value paired with its key and the second is the remaining
hash of options passed to render.

=== EExxaammppllee
Create a csv renderer:

  ActionController::Renderers.add :csv do |obj, options|
    filename = options[:filename] || 'data'
    str = obj.respond_to?(:to_csv) ? obj.to_csv : obj.to_s
    send_data str, :type => Mime::CSV,
      :disposition => "attachment; filename=#{filename}.csv"
  end

Note that we used Mime::CSV for the csv mime type as it comes with Rails. For
a custom renderer, you'll need to register a mime type with
Mime::Type.register.

To use the csv renderer in a controller action:

  def show
    @csvable = Csvable.find(params[:id])
    respond_to do |format|
      format.html
      format.csv { render :csv => @csvable, :filename => @csvable.name }
    }
  end

To use renderers and their mime types in more concise ways, see
ActionController::MimeResponds::ClassMethods.respond_to and
ActionController::MimeResponds#respond_with


(from gem activemodel-3.2.12)
=== IImmpplleemmeennttaattiioonn  ffrroomm  AAccttiivveeMMooddeell::::EErrrroorrss
------------------------------------------------------------------------------
  add(attribute, message = nil, options = {})

------------------------------------------------------------------------------

Adds message to the error messages on attribute. More than one error can be
added to the same attribute. If no message is supplied, :invalid is assumed.

If message is a symbol, it will be translated using the appropriate scope (see
translate_error). If message is a proc, it will be called, allowing for things
like Time.now to be used within an error.


(from gem activerecord-3.2.12)
=== IImmpplleemmeennttaattiioonn  ffrroomm  AAccttiivveeRReeccoorrdd::::IIddeennttiittyyMMaapp
------------------------------------------------------------------------------
  add(record)

------------------------------------------------------------------------------


(from gem activesupport-3.2.12)
=== IImmpplleemmeennttaattiioonn  ffrroomm  AAccttiivveeSSuuppppoorrtt::::BBuuffffeerreeddLLooggggeerr
------------------------------------------------------------------------------
  add(severity, message = nil, progname = nil, &block)

------------------------------------------------------------------------------


(from gem activesupport-3.2.12)
=== IImmpplleemmeennttaattiioonn  ffrroomm  AAccttiivveeSSuuppppoorrtt::::TTaaggggeeddLLooggggiinngg
------------------------------------------------------------------------------
  add(severity, message = nil, progname = nil, &block)

------------------------------------------------------------------------------


(from gem rake-10.0.3)
=== IImmpplleemmeennttaattiioonn  ffrroomm  CCoommppoossiitteePPuubblliisshheerr
------------------------------------------------------------------------------
  add(pub)

------------------------------------------------------------------------------

Add a publisher to the composite.


(from gem mime-types-1.21)
=== IImmpplleemmeennttaattiioonn  ffrroomm  MMIIMMEE::::TTyyppeess
------------------------------------------------------------------------------
  add(*types)

------------------------------------------------------------------------------

Add one or more MIME::Type objects to the set of known types. Each type should
be experimental (e.g., 'application/x-ruby'). If the type is already known, a
warning will be displayed.

<strong>Please inform the maintainer of this module when registered types are
missing.</strong>


(from gem mime-types-1.21)
=== IImmpplleemmeennttaattiioonn  ffrroomm  MMIIMMEE::::TTyyppeess
------------------------------------------------------------------------------
  add(*types)

------------------------------------------------------------------------------

Add one or more MIME::Type objects to the set of known types. Each type should
be experimental (e.g., 'application/x-ruby'). If the type is already known, a
warning will be displayed.

<strong>Please inform the maintainer of this module when registered types are
missing.</strong>


(from gem net-ssh-2.6.6)
=== IImmpplleemmeennttaattiioonn  ffrroomm  NNeett::::SSSSHH::::AAuutthheennttiiccaattiioonn::::KKeeyyMMaannaaggeerr
------------------------------------------------------------------------------
  add(key_file)

------------------------------------------------------------------------------

Add the given key_file to the list of key files that will be used.


(from gem net-ssh-2.6.6)
=== IImmpplleemmeennttaattiioonn  ffrroomm  NNeett::::SSSSHH::::KKnnoowwnnHHoossttss
------------------------------------------------------------------------------
  add(host, key, options={})

------------------------------------------------------------------------------

Looks in all user known host files (see KnownHosts.hostfiles) and tries to add
an entry for the given host and key to the first file it is able to.


(from gem net-ssh-2.6.6)
=== IImmpplleemmeennttaattiioonn  ffrroomm  NNeett::::SSSSHH::::KKnnoowwnnHHoossttss
------------------------------------------------------------------------------
  add(host, key)

------------------------------------------------------------------------------

Tries to append an entry to the current source file for the given host and
key. If it is unable to (because the file is not writable, for instance), an
exception will be raised.


(from gem rack-1.4.5)
=== IImmpplleemmeennttaattiioonn  ffrroomm  RRaacckk::::CCaassccaaddee
------------------------------------------------------------------------------
  add(app)

------------------------------------------------------------------------------


(from gem rake-10.0.3)
=== IImmpplleemmeennttaattiioonn  ffrroomm  RRaakkee::::CCoommppoossiitteePPuubblliisshheerr
------------------------------------------------------------------------------
  add(pub)

------------------------------------------------------------------------------

Add a publisher to the composite.


(from gem rake-10.0.3)
=== IImmpplleemmeennttaattiioonn  ffrroomm  RRaakkee::::FFiilleeLLiisstt
------------------------------------------------------------------------------
  add(*filenames)

------------------------------------------------------------------------------


